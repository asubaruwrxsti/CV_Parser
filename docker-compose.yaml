services:
  backend-app:
    container_name: cv-backend
    restart: always
    image: build
    build:
      context: .
      dockerfile: Dockerfile
    user: appuser
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: cv-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=cv_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
    command: ["postgres", "-c", "listen_addresses=*", "-c", "max_connections=200"] # Adjust configuration if needed
    volumes:
      - db_data:/var/lib/postgresql/data

  adminer:
    container_name: cv-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
  
  frontend-app:
    container_name: cv-frontend
    restart: always
    build:
      context: ./frontend
      dockerfile: Dockerfile
    user: node
    volumes:
      - ./frontend:/app
    ports:
      - 5173:5173
    depends_on:
      - backend-app

  redis:
    container_name: cv-redis
    image: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

volumes:
  db_data:
  redis_data: